// <auto-generated />
using System;
using Material.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Material.DAL.Migrations
{
    [DbContext(typeof(MaterialDbContext))]
    [Migration("20241209222443_Migration_FavoriteList")]
    partial class Migration_FavoriteList
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Material.DAL.Entity.AuthorizationInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("ExpiredDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("AuthorizationInfos");
                });

            modelBuilder.Entity("Material.DAL.Entity.FavoriteList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("FavoriteLists");
                });

            modelBuilder.Entity("Material.DAL.Entity.FavoriteMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FavoriteListId")
                        .HasColumnType("int");

                    b.Property<int>("MaterialId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FavoriteListId");

                    b.HasIndex("MaterialId");

                    b.ToTable("FavoriteMaterials");
                });

            modelBuilder.Entity("Material.DAL.Entity.MaterialEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TestNameParam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("Material.DAL.Entity.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Material.DAL.Entity.AuthorizationInfo", b =>
                {
                    b.HasOne("Material.DAL.Entity.User", "User")
                        .WithOne("AuthorizationInfo")
                        .HasForeignKey("Material.DAL.Entity.AuthorizationInfo", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Material.DAL.Entity.FavoriteList", b =>
                {
                    b.HasOne("Material.DAL.Entity.User", "User")
                        .WithOne("FavoriteList")
                        .HasForeignKey("Material.DAL.Entity.FavoriteList", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Material.DAL.Entity.FavoriteMaterial", b =>
                {
                    b.HasOne("Material.DAL.Entity.FavoriteList", "FavoriteList")
                        .WithMany("FavoriteMaterials")
                        .HasForeignKey("FavoriteListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Material.DAL.Entity.MaterialEntity", "Material")
                        .WithMany("FavoriteMaterials")
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FavoriteList");

                    b.Navigation("Material");
                });

            modelBuilder.Entity("Material.DAL.Entity.MaterialEntity", b =>
                {
                    b.HasOne("Material.DAL.Entity.User", "User")
                        .WithMany("Materials")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Material.DAL.Entity.FavoriteList", b =>
                {
                    b.Navigation("FavoriteMaterials");
                });

            modelBuilder.Entity("Material.DAL.Entity.MaterialEntity", b =>
                {
                    b.Navigation("FavoriteMaterials");
                });

            modelBuilder.Entity("Material.DAL.Entity.User", b =>
                {
                    b.Navigation("AuthorizationInfo");

                    b.Navigation("FavoriteList");

                    b.Navigation("Materials");
                });
#pragma warning restore 612, 618
        }
    }
}
